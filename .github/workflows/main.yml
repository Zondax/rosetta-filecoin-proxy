name: rosetta-cli

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: sudo apt update && sudo apt install -yy build-essential bzr jq pkg-config mesa-opencl-icd ocl-icd-opencl-dev hwloc libhwloc-dev
      - name: Test
        run: make test

  rosetta_cli:
    name: Rosetta CLI integration tests
    runs-on: [self-hosted, linux, x64]
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        include:
#          - network: mainnet
#            url: LOTUS_MAINNET_RPC_URL
#          - network: devnet
#            url: LOTUS_DEVNET_RPC_URL
          - network: calibration
            url: LOTUS_CALIBRATION_RPC_URL
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.20' # The Go version to download (if necessary) and use.
      - run: git submodule update --init --recursive
      - run: sudo apt update && sudo apt install -yy build-essential bzr jq pkg-config mesa-opencl-icd ocl-icd-opencl-dev hwloc libhwloc-dev
      - run: make build_CI
      - name: Run proxy in background
        run: ./rosetta-filecoin-proxy&
        env:
          LOTUS_RPC_URL: ${{ matrix.url }}
      - run: ./rosetta_cli_test_PR.sh ${{ matrix.network }}
        working-directory: ./rosetta/tests
